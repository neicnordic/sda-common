name: Go tests

on: [push]

jobs:

  build:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.18, 1.19]
    steps:

      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: create directory
        run: mkdir -p /tmp/$(date +'%Y-%m-%d')

      - name: Start containers
        run: sh testing/compose-start.sh

      - name: debug
        if: ${{ failure() }}
        run: |
          docker logs certfixer
          docker logs mq_server

      - name: Test
        run: go test -v -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Codecov
        uses: codecov/codecov-action@v3.1.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.txt
          flags: unittests
          fail_ci_if_error: false
